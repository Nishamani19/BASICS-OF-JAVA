class QueueLinkedList
{
    class Node
    {
        int data;
        Node next;
    }
    Node front = null, rear = null;
    
    void enqueue(int val)
    {
        Node newNode = new Node();
        newNode.data = val;
        newNode.next = null;
        
        if (rear == null)
        {
            front = rear = newNode;
        } 
        else
        {
            rear.next = newNode;
            rear = newNode;
        }
    }
    
    void dequeue()
    {
        if (front == null)
        {
            System.out.println("Queue is Empty");
        }
        else
        {
            System.out.println("Dequeue: " + front.data);
            front = front.next;
            if (front == null)
                rear = null;
        }
    }
    
    void peek()
    {
        if (front == null)
        {
            System.out.println("The queue is empty");
        }
        else
        {
            System.out.println("Front: " + front.data);
        }
    }
    
    void display()
    {
        if (front == null)
        {
            System.out.println("The queue is empty");
        }
        else
        {
            Node temp = front;
            System.out.print("Queue: ");
            while (temp != null)
            {
                System.out.print(temp.data + " ");
                temp = temp.next;
            }
            System.out.println();
        }
    }
}

public class Main
{
    public static void main(String[] args)
    {
        QueueLinkedList queue = new QueueLinkedList();
        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue(30);
        
        queue.display();
        queue.peek();
        
        queue.dequeue();
        queue.display();
    }
}
