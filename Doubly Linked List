class Nisha
{
	Node head;
	class Node
	{
		int data;
		Node next;
		Node prev;

		Node(int data)
		{
			this.data=data;
			next = null;
			prev = null;
		}
	}

	public void insertAtEnd(int data)
	{
		Node newNode = new Node(data);
		if(head==null)
		{
			head = newNode;
			return;
		}
		Node temp = head;

		while(temp.next!=null)
		{
			temp = temp.next;
		}
		temp.next = newNode;
		newNode.prev = temp;
	}

	public void insertAtBeginning(int data)
	{
		Node newNode = new Node(data);
		if(head==null)
		{
			head = newNode;
			return;
		}
		newNode.next=head;
		head.prev = newNode;
		head = newNode;
	}

	public void insertAtMiddle(int data,int pos)
	{
		if(pos==0)
		{
			insertAtBeginning(data);
			return;
		}
		Node newNode = new Node(data);
		Node temp = head;

		for(int i=0; i<pos-1&&temp!=null; i++)
		{
			temp=temp.next;
		}
		if(temp==null||temp.next==null)
		{
			insertAtEnd(data);
			return;
		}
		newNode.next = temp.next;
		newNode.prev = temp;
		temp.next.prev = newNode;
		temp.next = newNode;
	}

	public void deleteAtEnd()
	{
		if(head==null)
		{
			System.out.println("head is null so we cannot delete");
		}
		else if(head.next==null) {
			head=null;

		}
		else {
			Node temp = head;
			while(temp.next.next!=null)
			{
				temp=temp.next;
			}
			temp.next=null;

		}
	}

	public void deleteAtBegin()
	{
		if(head==null)
		{
			System.out.println("head is null cannot delete");
		}
		else {
			head=head.next;

		}
	}

	public void deleteAtMiddle(int pos)
	{
		if(head==null)
		{
			System.out.println("head is null, cannot delete");
		}
		else {
			Node temp =head;
			pos-=2;
			while(pos>0)
			{
				pos--;
				temp=temp.next;
			}
			temp.next=temp.next.next;
		}
	}

	public void display()
	{
		Node temp = head;
		while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp = temp.next;
		}
		System.out.println();
	}
}
public class Main
{
	public static void main(String[]args)
	{
		Nisha list = new Nisha();
		list.insertAtEnd(1);
		list.display();
		list.insertAtEnd(9);
		list.display();
		list.insertAtBeginning(0);
		list.display();
		list.insertAtBeginning(2);
		list.display();
		list.insertAtMiddle(4,3);
		list.display();
		list.deleteAtEnd();
		list.display();
		list.deleteAtBegin();
		list.display();
		list.deleteAtMiddle(2);
		list.display();
	}
}
